(define (f n)
    (if (< n 3) n
    (+ (f (- n 1)) 
        (* 2(f (- n 2)))
        (* 3(f (- n 3))))))

        
(define (f2 n)
    (f-iter 0 1 2 n))
;c 作为新产生的数
(define (f-iter a b c count)
    (cond ((= count 2) c)
          ((< count 2) count)
          (else (f-iter b c (+ (* a 3) (* 2 b)  c ) (- count 1)))))
 

 
;加入循环变量 i 的迭代
(define (f n)
    (if (< n 0)
        n
       (f-iter 2 1 0 0 n)))

(define (f-iter a b c i n)
    (if (= i n)
        c
        (f-iter (+ a (* 2 b) (* 3 c))   ; new a
                a                       ; new b
                b                       ; new c
                (+ i 1)
                n)))