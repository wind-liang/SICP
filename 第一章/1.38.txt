(define (cont-frac n d k)
    (cont-frac-iter n d (/ (n k) (d k)) (- k 1)))
(define (cont-frac-iter n d product k)
    (if (= k 0)
        product
        (cont-frac-iter n d (/ (n k) (+ (d k) product)) (- k 1))))
(define (get-e kk)
     (define (d k)
         (cond ((= k 1) 1)
            ((= k 2) 2)
            ((= (remainder k 3) 0) 1)
            ((= (remainder k 3) 1) 1)
            (else (* (/ (+ k 1) 3) 2))))
     (+ 2 (cont-frac (lambda (i) 1.0) d kk)))
            